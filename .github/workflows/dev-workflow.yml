name: Development Workflow

on:
  push:
    branches:
      - dev
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches:
      - dev
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  test-suite:
    name: Run Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run pytest
        id: pytest
        run: |
          pytest

      - name: Generate coverage report
        run: |
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  
  build-test-image:
    needs: test-suite
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (without pushing)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: cloudproxy:dev-test

      - name: Test Docker image
        run: |
          docker run --name cloudproxy-test -d cloudproxy:dev-test
          # Wait for container to initialize
          sleep 5
          # Check if container is running
          if ! docker ps | grep -q cloudproxy-test; then
            echo "Container failed to start"
            docker logs cloudproxy-test
            exit 1
          fi
          # Cleanup
          docker stop cloudproxy-test
          docker rm cloudproxy-test 