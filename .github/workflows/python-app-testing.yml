# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches:
    - develop
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches:
    - develop
    - main
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  
  backend-test:
    name: 🐍 Backend Testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        # Set dummy environment variables for testing
        export PROXY_USERNAME=test_username
        export PROXY_PASSWORD=test_password
        export DIGITALOCEAN_ACCESS_TOKEN=test_do_token
        export AWS_ACCESS_KEY=test_aws_key
        export AWS_SECRET_KEY=test_aws_secret
        export HETZNER_API_TOKEN=test_hetzner_token
        export GCP_SERVICE_ACCOUNT={}
        # Run the tests
        pytest
    - name: Generate coverage report
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: backend
        name: backend-coverage

  frontend-test:
    name: 🎨 Frontend Testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloudproxy-ui
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: cloudproxy-ui/package-lock.json
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔍 Run linting
      run: npm run lint
      continue-on-error: true  # Don't fail on lint warnings
    
    - name: 🧪 Run unit tests with coverage
      run: npm run test:coverage
    
    - name: 🏗️ Build production bundle
      run: npm run build
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./cloudproxy-ui/coverage
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

  testing:
    name: Testing
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    steps:
    - name: ✅ All tests passed
      run: echo "All tests completed successfully"
